@mixin ui-asset($smooth: 'true') {
    background-image: url(#{$uiPath});
    background-repeat: no-repeat;

    @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
        background-image: url(#{$uiX2Path});
        background-size: #{$uiWidth}px #{$uiHeight}px;
    }

    @if $smooth != 'true' {
        image-rendering: -webkit-optimize-contrast;
    }
}

@mixin x2-image($url, $extension, $width, $height, $smooth: 'true') {
    background-image: url(#{$url}.#{$extension});

    @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
        background-image: url(#{$url}_x2.#{$extension});
        background-size: $width $height;
    }

    @if $smooth != 'true' {
        image-rendering: -webkit-optimize-contrast;
    }
}

@mixin offsetXY($x, $y, $fallbackPrefix: 'margin-') {

    html.no-csstransforms & {
        #{$fallbackPrefix}left: $x;
        #{$fallbackPrefix}top: $y;
    }

    html.csstransforms & {
        -webkit-transform: translate($x, $y);
        -moz-transform: translate($x, $y);
        -ms-transform: translate($x, $y);
        -o-transform: translate($x, $y);
        transform: translate($x, $y);
    }

    html.csstransforms3d & {
        -webkit-transform: translate3d($x, $y, 0);
        -moz-transform: translate3d($x, $y, 0);
        -ms-transform: translate3d($x, $y, 0);
        -o-transform: translate3d($x, $y, 0);
        transform: translate3d($x, $y, 0);
    }
}

@mixin preserve3d {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
    transform-style: preserve-3d;
}

@mixin backfaceVisibility($visibility: hidden) {
    -webkit-backface-visibility: $visibility;
    -moz-backface-visibility: $visibility;
    -ms-backface-visibility: $visibility;
    backface-visibility: $visibility;
}

@mixin transform($transform) {
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -ms-transform: $transform;
    -o-transform: $transform;
    transform: $transform;
}

@mixin transformTransition($tranformRest, $rest: '') {
    @if $rest != '' {
        $rest: #{','} $rest;
    }
    -webkit-transition: -webkit-transform $tranformRest #{$rest};
    -moz-transition: -moz-transform $tranformRest #{$rest};
    -ms-transition: -ms-transform $tranformRest #{$rest};
    -o-transition: -o-transform $tranformRest #{$rest};
    transition: transform $tranformRest #{$rest};
}

@mixin transition($rest) {
    -webkit-transition: #{$rest};
    -moz-transition: #{$rest};
    -ms-transition: #{$rest};
    -o-transition: #{$rest};
    transition: #{$rest};
}

@mixin transformOrigin($x, $y) {
    -webkit-transform-origin: $x $y;
    -moz-transform-origin: $x $y;
    -ms-transform-origin: $x $y;
    -o-transform-origin: $x $y;
    transform-origin: $x $y;
}

@mixin perspective($rest) {
    -webkit-perspective: $rest;
    -moz-perspective: $rest;
    -ms-perspective: $rest;
    perspective: $rest;
}

@mixin cache {
    -webkit-transform: translateZ(0);
    -moz-transform: translateZ(0);
    -ms-transform: translateZ(0);
    -o-transform: translateZ(0);
    transform: translateZ(0);
}
